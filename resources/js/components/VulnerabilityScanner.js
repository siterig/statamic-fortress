// VulnerabilityScanner Component
export default {
    name: 'VulnerabilityScanner',
    mounted() {
        this.initializeEventListeners();
    },
    methods: {
        initializeEventListeners() {
            document.addEventListener('DOMContentLoaded', () => {
                this.setupScanButton();
            });
        },
        setupScanButton() {
            const scanButton = document.querySelector('[data-scan-vulnerabilities]');
            if (scanButton) {
                scanButton.addEventListener('click', () => {
                    this.startScan();
                });
            }
        },
        async startScan() {
            const scanButton = document.querySelector('[data-scan-vulnerabilities]');
            const statusElement = document.querySelector('[data-scan-status]');
            
            if (scanButton) {
                scanButton.disabled = true;
                scanButton.textContent = 'Scanning...';
            }

            if (statusElement) {
                statusElement.textContent = 'Scan in progress...';
            }

            try {
                const response = await fetch('/cp/fortress/scan', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.content
                    }
                });

                const data = await response.json();
                this.updateScanResults(data);
            } catch (error) {
                console.error('Scan failed:', error);
                if (statusElement) {
                    statusElement.textContent = 'Scan failed. Please try again.';
                }
            } finally {
                if (scanButton) {
                    scanButton.disabled = false;
                    scanButton.textContent = 'Scan Now';
                }
            }
        },
        updateScanResults(data) {
            const statusElement = document.querySelector('[data-scan-status]');
            if (statusElement) {
                statusElement.textContent = `Scan completed at ${new Date().toLocaleTimeString()}`;
            }

            // Update vulnerability list if it exists
            const listElement = document.querySelector('[data-vulnerability-list]');
            if (listElement && data.vulnerabilities) {
                listElement.innerHTML = data.vulnerabilities.map(vuln => `
                    <div class="p-4 border-b last:border-b-0">
                        <div class="flex items-center justify-between">
                            <h4 class="font-medium">${vuln.package}</h4>
                            <span class="fortress-badge fortress-badge--${vuln.severity}">
                                ${vuln.severity}
                            </span>
                        </div>
                        <p class="mt-2 text-sm text-gray-600">${vuln.description}</p>
                    </div>
                `).join('');
            }
        }
    }
}; 
 